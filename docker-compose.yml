version: '3'

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24

services:
  django: &django
    build:
      context: ./
      dockerfile: ./compose/django/Dockerfile
    command: ./compose/django/start.sh
    depends_on:
      - mailhog
      - memcached
      - postgres
    env_file:
      - ./compose/local.env
    image: sherbet_django
    ports:
      - "8000:8000"
    user: django
    volumes:
      - ./config:/home/django/srv/config
      - ./sherbet:/home/django/srv/sherbet
  celery: &celery
    command: ./compose/celery/start.sh
    depends_on:
      - rabbitmq
    env_file:
      - ./compose/local.env
    image: sherbet_django:latest
    user: django
    volumes:
      - ./config:/home/django/srv/config
      - ./sherbet:/home/django/srv/sherbet
  celerybeat:
    <<: *celery
    command: ./compose/beat/start.sh
  celeryflower:
    <<: *celery
    command: ./compose/flower/start.sh
    ports:
      - "8055:5555"
  frontend:
    build:
      context: ./
      dockerfile: ./compose/frontend/Dockerfile
    command: ./compose/frontend/start.sh
    env_file:
      - ./compose/local.env
    ports:
      - "3000:3000"
      - "8888:8888"
    volumes:
      - ./frontend:/home/django/srv/frontend
      - ./sherbet/static:/home/django/srv/sherbet/static
  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "8025:8025"
  memcached:
    image: memcached:1
  postgres:
    env_file:
      - ./compose/local.env
    image: postgres:13
    volumes:
      - pgdata:/var/lib/postgresql/data
  rabbitmq:
    env_file:
      - ./compose/local.env
    image: rabbitmq:3

volumes:
  pgdata:
